<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dili.account.dao.IUserAccountDao">

	<sql id="Base_Column">
		`id`,
			`account_id`,
			`parent_account_id`,
			`customer_id`,
			`customer_id`, 
			`customer_name`, 
			`customer_code`, 
			`customer_market_type`, 
			`customer_certificate_type`, 
			`customer_certificate_number`, 
			`customer_contacts_phone`,  
			`fund_account_id`,
			`card_exist`,
			`type`,
			`usage_type`,
			`permissions`,
			`login_pwd`,
			`pwd_changed`,
			`login_time`,
			`secret_key`,
			`state`,
			`source`,
			`disabled_state`,
			`version`,
			`firm_id`,
			`firm_name`,
			`create_time`,
			`modify_time`
	</sql>

	<select id="selectList" resultType="com.dili.account.entity.UserAccountDo">
		SELECT
			<include refid="Base_Column"/>
		FROM
			account_user_account
		ORDER BY
			id DESC
	</select>

	<insert id="save" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO account_user_account (
			`account_id`,
			`parent_account_id`,
			`customer_id`, 
			`customer_name`, 
			`customer_code`, 
			`customer_market_type`, 
			`customer_certificate_type`, 
			`customer_certificate_number`, 
			`customer_contacts_phone`, 
			`fund_account_id`,
			`card_exist`,
			`type`,
			`usage_type`,
			`permissions`,
			`login_pwd`,
			`pwd_changed`,
			`login_time`,
			`secret_key`,
			`state`,
			`source`,
			`version`,
			`disabled_state`,
			`creator_id`,
			`creator`,
			`firm_id`,
			`firm_name`,
			`create_time`,
			`modify_time`
		)
		VALUES (
			#{accountId},
			#{parentAccountId},
			#{customerId}, 
			#{customerName}, 
			#{customerCode}, 
			#{customerMarketType}, 
			#{customerCertificateType}, 
			#{customerCertificateNumber}, 
			#{customerContactsPhone},
			#{fundAccountId},
			#{cardExist},
			#{type},
			#{usageType},
			#{permissions},
			#{loginPwd},
			#{pwdChanged},
			#{loginTime},
			#{secretKey},
			#{state},
			#{source},
			#{version},
			#{disabledState},
			#{creatorId},
			#{creator},
			#{firmId},
			#{firmName},
			#{createTime},
			#{modifyTime}
		)
	</insert>

	<select id="getById" resultType="com.dili.account.entity.UserAccountDo">
		SELECT
			<include refid="Base_Column"/>
		FROM
			account_user_account
		WHERE
			id = #{id}
	</select>

	<update id="update">
		UPDATE account_user_account
	 	<set>
			<if test="accountId != null">`account_id` = #{accountId}, </if>
			<if test="parentAccountId != null">`parent_account_id` = #{parentAccountId}, </if>
			<if test="customerId != null">`customer_id` = #{customerId}, </if>
			<if test="customerName != null">`customer_name` = #{customerName}, </if>
			<if test="customerCode != null">`customer_code` = #{customerCode}, </if>
			<if test="customerMarketType != null">`customer_market_type` = #{customerMarketType}, </if>
			<if test="customerCertificateType != null">`customer_certificate_type` = #{customerCertificateType}, </if>
			<if test="customerCertificateNumber != null">`customer_certificate_number` = #{customerCertificateNumber}, </if>
			<if test="customerContactsPhone != null">`customer_contacts_phone` = #{customerContactsPhone}, </if>
			<if test="fundAccountId != null">`fund_account_id` = #{fundAccountId}, </if>
			<if test="cardExist != null">`card_exist` = #{cardExist}, </if>
			<if test="type != null">`type` = #{type}, </if>
			<if test="usageType != null">`usage_type` = #{usageType}, </if>
			<if test="permissions != null">`permissions` = #{permissions}, </if>
			<if test="loginPwd != null">`login_pwd` = #{loginPwd}, </if>
			<if test="pwdChanged != null">`pwd_changed` = #{pwdChanged}, </if>
			<if test="loginTime != null">`login_time` = #{loginTime}, </if>
			<if test="secretKey != null">`secret_key` = #{secretKey}, </if>
			<if test="state != null">`state` = #{state}, </if>
			<if test="source != null">`source` = #{source}, </if>
			<if test="version != null">`version` = #{version}, </if>
			<if test="firmId != null">`firm_id` = #{firmId}, </if>
			<if test="firmName != null">`firm_name` = #{firmName}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="modifyTime != null">`modify_time` = #{modifyTime}</if>
		</set>
		WHERE
			id = #{id}
	</update>

	<update id="updateCustomerInfo">
		UPDATE account_user_account
	 	<set>
			<if test="customerName != null">`customer_name` = #{customerName}, </if>
			<if test="customerMarketType != null">`customer_market_type` = #{customerMarketType}, </if>
			<if test="customerCertificateType != null">`customer_certificate_type` = #{customerCertificateType}, </if>
			<if test="customerCertificateNumber != null">`customer_certificate_number` = #{customerCertificateNumber}, </if>
			<if test="customerContactsPhone != null">`customer_contacts_phone` = #{customerContactsPhone}, </if>
			<if test="type != null">`type` = #{type}, </if>
			<if test="usageType != null">`usage_type` = #{usageType}, </if>
			<if test="permissions != null">`permissions` = #{permissions}, </if>
			<if test="disabledState != null">`disabled_state` = #{disabledState}, </if>
			<if test="modifyTime != null">`modify_time` = #{modifyTime}</if>
		</set>
		WHERE
			customer_id = #{customerId}
	</update>


	<delete id="batchRemove">
		DELETE
		FROM
			account_user_account
		WHERE
			id IN
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<select id="getByAccountId" resultType="com.dili.account.entity.UserAccountDo">
		SELECT
		<include refid="Base_Column"/>
		FROM
			account_user_account
		WHERE
			account_id = #{accountId}
		AND state != 4
	</select>

	<select id="findSlavesByParent" resultType="com.dili.account.entity.UserAccountDo">
		SELECT
			aua.account_id accountId, aua.customer_id customerId, auc.card_no cardNo
		FROM
			account_user_account aua 
		INNER JOIN 
			account_user_card auc 
		ON 
			aua.account_id = auc.account_id
		WHERE
			aua.parent_account_id = #{parentAccountId}
		AND 
			auc.state != 4
	</select>
	
	<!-- 单个更新卡账户是否禁用状态 -->
	<update id="updateDisabledState">
		UPDATE 
			account_user_account 
		SET 
			disabled_state = #{disabledState},
		    version = version + 1,
		    modify_time = NOW()
		WHERE 
			account_id = #{accountId}
		AND 
			version=#{version}
	</update>
	
	<!-- 单个更新卡账户使用状态 -->
	<update id="updateState">
		UPDATE 
			account_user_account 
		SET 
			state = #{state},
		    version = version + 1,
		    modify_time = NOW()
		WHERE 
			account_id = #{accountId}
		AND 
			version=#{version}
	</update>
</mapper>
