<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dili.account.dao.IUserCardDao">

	<sql id="Base_Column">
		    `id`,
			`device_id`,
			`account_id`,
			`card_no`,
			`category`,
			`type`,
			`verify_code`,
			`cash_pledge`,
			`last`,
			`state`,
			`version`,
			`creator_id`,
			`creator`,
			`firm_id`,
			`firm_name`,
			`create_time`,
			`modify_time`
	</sql>
	<select id="selectList" resultType="com.dili.account.entity.UserCardDo">
		SELECT
			<include refid="Base_Column"/>
		FROM
			account_user_card
		ORDER BY
			id DESC
	</select>

	<insert id="save" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO account_user_card (
			`device_id`,
			`account_id`,
			`card_no`,
			`category`,
			`type`,
			`verify_code`,
			`cash_pledge`,
			`last`,
			`state`,
			`version`,
			`creator_id`,
			`creator`,
			`firm_id`,
			`firm_name`,
			`create_time`,
			`modify_time`
		)
		VALUES (
			#{deviceId},
			#{accountId},
			#{cardNo},
			#{category},
			#{type},
			#{verifyCode},
			#{cashPledge},
			#{last},
			#{state},
			#{version},
			#{creatorId},
			#{creator},
			#{firmId},
			#{firmName},
			#{createTime},
			#{modifyTime}
		)
	</insert>

	<select id="getById" resultType="com.dili.account.entity.UserCardDo">
		SELECT
		<include refid="Base_Column"/>
		FROM
			account_user_card
		WHERE
			id = #{id}
	</select>
	<select id="getByAccountId" resultType="com.dili.account.entity.UserCardDo">
		SELECT
		<include refid="Base_Column"/>
		FROM
			account_user_card
		WHERE
			account_id = #{accountId}
		AND state != 4
	</select>

    <select id="getByCardNo" resultType="com.dili.account.entity.UserCardDo">
		SELECT
		<include refid="Base_Column"/>
		FROM
		account_user_card
		<where>
			card_no = #{cardNo}
			<if test="needReturn!=null and needReturn==0">
				AND state != 4
			</if>
		</where>
	</select>

    <update id="update">
		UPDATE account_user_card
	 	<set>
			<if test="deviceId != null">`device_id` = #{deviceId}, </if>
			<if test="accountId != null">`account_id` = #{accountId}, </if>
			<if test="cardNo != null">`card_no` = #{cardNo}, </if>
			<if test="category != null">`category` = #{category}, </if>
			<if test="type != null">`type` = #{type}, </if>
			<if test="verifyCode != null">`verify_code` = #{verifyCode}, </if>
			<if test="cashPledge != null">`cash_pledge` = #{cashPledge}, </if>
			<if test="last != null">`last` = #{last}, </if>
			<if test="state != null">`state` = #{state}, </if>
			<if test="version != null">`version` = #{version}, </if>
			<if test="creatorId != null">`creator_id` = #{creatorId}, </if>
			<if test="creator != null">`creator` = #{creator}, </if>
			<if test="firmId != null">`firm_id` = #{firmId}, </if>
			<if test="firmName != null">`firm_name` = #{firmName}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="modifyTime != null">`modify_time` = #{modifyTime}</if>
		</set>
		WHERE
			id = #{id}
	</update>

	<delete id="batchRemove">
		DELETE
		FROM
			account_user_card
		WHERE
			id IN
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<!-- 更新卡状态 -->
	<update id="updateState">
		UPDATE account_user_card SET state = #{state},
		                             version = version + 1,
		                             modify_time = NOW()
		WHERE account_id = #{accountId}
		  and version=#{version}
	</update>

</mapper>
